name: "Build and Publish iOS"
on:
  push:
    branches:
      - main
jobs:
  test_and_analyze:
    name: Run flutter test and analyzer
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.x"
          channel: stable
          cache: true
      - run: flutter pub get
      - run: flutter analyze
      - run: flutter test

  certificate_provisioning_and_build:
    name: Apple certificate, profile provisioning, and build processes
    runs-on: macos-latest
    env:
      ARCHIVE_BUILD_PATH: /Users/runner/work/obfuscation/obfuscation/build/archive/Runner.xcarchive
      IOS_BUILD_PATH: /Users/runner/work/obfuscation/obfuscation/build/ios
    steps:
      - uses: actions/checkout@v3
      - name: Install and set Flutter version
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.x'
      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
          
          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH
          
          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          
          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH
          
          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Get flutter dependencies
        run: flutter pub get

      - name: Build IPA
        run: flutter build ipa --release --export-options-plist=ios/Runner/ExportOptions.plist

      - name: Publish IPA Artefacts
        uses: actions/upload-artifact@v2
        with:
          name: release-ipa
          path: build/ios/ipa/*.ipa

      # Important! Cleanup: remove the certificate and provisioning profile from the runner!
      - name: Clean up keychain and provisioning profile
        if: ${{ always() }}
        run: |
          security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
          rm ~/Library/MobileDevice/Provisioning\ Profiles/build_pp.mobileprovision

  distribution:
    name: IPA distribution to Firebase
    needs: [ certificate_provisioning_and_build ]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Get release-ipa from artifacts
        uses: actions/download-artifact@v2
        with:
          name: release-ipa